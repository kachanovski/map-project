{"version":3,"sources":["components/SearchItem.module.css","components/SearchBar.module.css","reportWebVitals.ts","api/yandex-map-api.ts","store/MapReducer.tsx","assets/rating-icon.svg","components/SearchItem.tsx","components/SearchBarInMap.tsx","AppMap.tsx","store/store.ts","index.tsx","App.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","MapsAPI","search","get","InitialState","feature","geometry","coordinates","properties","CompanyMetaData","name","address","url","myLocation","center","zoom","getPlacemarksTC","dispatch","res","type","data","features","catch","e","SearchItem","props","className","s","search_item","title","number","rating","rating_star","src","star","alt","SearchBar","totalItems","resultArray","length","useState","page","setPage","items","setItems","hasNextPage","setHasNextPage","startIndex","setStartIndex","error","setError","useEffect","getItems","nextItems","arr","splice","cutArr","concat","search_bar","map","item","index","onEnter","MapApp","hideResults","setHideResults","useDispatch","useSelector","state","searchValue","setSearchValue","usePosition","latitude","longitude","mapState","width","controls","app","search_container","value","onChange","currentTarget","search_box","placeholder","onClick","button","results","SearchBarInMap","query","lang","load","height","defaultState","modules","c","balloonContentHeader","balloonContentBody","balloonContentFooter","options","preset","iconColor","location","myLocationAC","centerPositionAC","float","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleWare","window","ReactDOM","render","StrictMode","AppMap","document","getElementById"],"mappings":"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","file":"static/js/main.2bb0d948.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_item\":\"SearchItem_search_item__2ICqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_bar\":\"SearchBar_search_bar__ASkdf\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://search-maps.yandex.ru/v1/\"\r\n})\r\n\r\nexport const MapsAPI = {\r\n    getResult: (search: string) => {\r\n        return instance.get(\r\n            `?text=Компьютерные курсы, ${search}&type=biz&lang=ru_RU&results=100&apikey=6f1a0a0c-b9b7-49ed-a969-1db3f019a8d1`\r\n        );\r\n    },\r\n}","import {MapsAPI} from \"../api/yandex-map-api\";\r\nimport {Dispatch} from 'redux';\r\n\r\nexport type GetPlaceMarks = ReturnType<typeof getPlacemarksAC>\r\nexport type SearchType = ReturnType<typeof setSearchValueAC>\r\nexport type MyLocationType = ReturnType<typeof myLocationAC>\r\nexport type CenterPositionType = ReturnType<typeof centerPositionAC>\r\n\r\nexport type ActionsType = GetPlaceMarks | SearchType | MyLocationType | CenterPositionType\r\n\r\nexport type FeaturesType = {\r\n    geometry: CoordinatesType\r\n    properties: PropertiesType\r\n}\r\n\r\nexport type CoordinatesType = {\r\n    coordinates: Array<number>\r\n}\r\n\r\ntype PropertiesType = {\r\n    CompanyMetaData: CompanyMetaDataType\r\n}\r\n\r\ntype CompanyMetaDataType = {\r\n    name: string\r\n    address: string\r\n    url: string\r\n}\r\n\r\nexport type InitialStateType = {\r\n    feature: Array<FeaturesType>\r\n    myLocation: Array<number>\r\n    center: Array<number>\r\n    zoom: number\r\n    search: string\r\n}\r\n\r\nlet InitialState: InitialStateType = {\r\n    feature: [\r\n        {\r\n            geometry: {\r\n                coordinates: []\r\n            },\r\n            properties: {\r\n                CompanyMetaData: {\r\n                    name: '',\r\n                    address: '',\r\n                    url: ''\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    myLocation: [],\r\n    center: [32.99054220474171, 3.8141637443059158],\r\n    zoom: 3,\r\n    search: ''\r\n}\r\n\r\nexport const MapReducer = (state = InitialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"MAPS/GET_PLACEMARKS\": {\r\n            return {\r\n                ...state,\r\n                ...state.feature,\r\n                feature: action.feature\r\n            }\r\n        }\r\n        case \"MAPS/MY_LOCATION\":\r\n            return {\r\n                ...state,\r\n                ...state.myLocation,\r\n                myLocation: action.location,\r\n                zoom: action.zoom\r\n            }\r\n        case \"MAPS/CENTER_POSITION\":\r\n            return {\r\n                ...state,\r\n                center: action.center\r\n            }\r\n        case \"MAPS/SEARCH_VALUE\":\r\n            return {\r\n                ...state,\r\n                searchValue: action.search\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getPlacemarksAC = (feature: Array<FeaturesType>) => {\r\n    return {\r\n        type: 'MAPS/GET_PLACEMARKS', feature\r\n    } as const\r\n}\r\n\r\nexport const setSearchValueAC = (search: string) => {\r\n    return {\r\n        type: 'MAPS/SEARCH_VALUE', search\r\n    } as const\r\n}\r\nexport const myLocationAC = (location: Array<number>, zoom: number) => {\r\n    return {\r\n        type: 'MAPS/MY_LOCATION', location, zoom\r\n    } as const\r\n}\r\nexport const centerPositionAC = (center: Array<number>) => {\r\n    return {\r\n        type: 'MAPS/CENTER_POSITION', center\r\n    } as const\r\n}\r\n\r\nexport const getPlacemarksTC = (search: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        debugger\r\n        MapsAPI.getResult(search).then(res => {\r\n            dispatch(getPlacemarksAC(res.data.features))\r\n        }).catch(e => {\r\n            }\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/rating-icon.20719ad2.svg\";","import React from 'react';\r\nimport s from './SearchItem.module.css'\r\nimport star from '../assets/rating-icon.svg';\r\n\r\n// элемент внутри панели поиска\r\n\r\ntype SearchItemPropsType = {\r\n    number?: number\r\n    name?: string\r\n    address?: string\r\n    url?: string\r\n}\r\n\r\nconst SearchItem = (props: SearchItemPropsType) => {\r\n    return (\r\n        <div className={s.search_item}>\r\n            <h4 className={s.title}>---{props.number}--- {props.name}</h4>\r\n            <div className={s.address}>{props.address}</div>\r\n            <div className={s.address}>{props.url}</div>\r\n            <div className={s.rating}>(5)\r\n                <img className={s.rating_star} src={star} alt=\"Rating\"/>\r\n                <img className={s.rating_star} src={star} alt=\"Rating\"/>\r\n                <img className={s.rating_star} src={star} alt=\"Rating\"/>\r\n                <img className={s.rating_star} src={star} alt=\"Rating\"/>\r\n                <img className={s.rating_star} src={star} alt=\"Rating\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchItem;","import React, {useEffect, useState} from 'react';\r\nimport s from './SearchBar.module.css'\r\nimport SearchItem from './SearchItem';\r\nimport {Waypoint} from 'react-waypoint';\r\nimport {FeaturesType} from \"../store/MapReducer\";\r\n\r\n// бокавая панель с результатами поиска\r\n\r\ntype SearchBarPropsType = {\r\n    resultArray: Array<FeaturesType>\r\n}\r\n\r\nconst SearchBar = (props: SearchBarPropsType) => {\r\n\r\n    const totalItems = props.resultArray.length; //размер всего массива\r\n    const pageSize = 5; //размер подгружаемого массива\r\n\r\n    const [page, setPage] = useState<number>(1); // номер порции подгружаемых айтемов\r\n    const [items, setItems] = useState<Array<FeaturesType>>([]); // отображаемые айтемы\r\n    const [hasNextPage, setHasNextPage] = useState(true); // если есть следующие айтемы для отображения - true\r\n    const [startIndex, setStartIndex] = useState<number>(0) // стартовый индекс, откуда начинает вырезаться массив\r\n    const [error, setError] = useState<string>(\"\") // если массив пустой, вернет ошибку\r\n\r\n    // вырезает из массива количество страниц, равное pageSize\r\n    const cutArr = (arr: Array<FeaturesType>, startIndex: number,): Array<FeaturesType> => {\r\n        let cuttedArr = [...arr].splice(startIndex, pageSize);\r\n        return cuttedArr;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, []);\r\n\r\n    const getItems = () => {\r\n        if (!hasNextPage) return;\r\n\r\n        let nextItems = cutArr(props.resultArray, startIndex);\r\n        if (nextItems) {\r\n            if (totalItems === items.length + nextItems.length) {\r\n                setHasNextPage(false)\r\n            }\r\n            setItems(items.concat(nextItems));\r\n            setPage(page + 1);\r\n            setStartIndex(startIndex + pageSize);\r\n        }\r\n        if (items.length === 0) {\r\n            setError(\"Ничего не нашел :(\")\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n    const loadMoreItems = () => {\r\n        if (page > 1) {\r\n            getItems();\r\n        }\r\n    }\r\n\r\n    if (items.length !== 0) {\r\n        return (\r\n            <div>\r\n                <div className={s.search_bar}>\r\n                    {items.map((item, index) =>\r\n                        <SearchItem key={index}\r\n                                    number={index + 1}\r\n                                    address={item.properties.CompanyMetaData.address}\r\n                                    url={item.properties.CompanyMetaData.url}\r\n                                    name={item.properties.CompanyMetaData.name}/>)}\r\n\r\n                    {hasNextPage && (\r\n                        <Waypoint onEnter={loadMoreItems}>\r\n                            <div>Loading...</div>\r\n                        </Waypoint>\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <h2>{error}</h2>\r\n    }\r\n}\r\nexport default SearchBar;","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {usePosition} from 'use-position';\r\nimport s from './App.module.css'\r\nimport {GeolocationControl, Map, Placemark, YMaps} from \"react-yandex-maps\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {centerPositionAC, FeaturesType, getPlacemarksTC, myLocationAC} from \"./store/MapReducer\";\r\nimport {StateType} from \"./store/store\";\r\nimport SearchBarInMap from \"./components/SearchBarInMap\";\r\nimport { points } from \"./App\";\r\n\r\n\r\nconst MapApp = () => {\r\n\r\n    const [hideResults, setHideResults] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const feature = useSelector<StateType, Array<FeaturesType>>(state => state.map.feature)\r\n    const myLocation = useSelector<StateType, Array<number>>(state => state.map.myLocation)\r\n    const center = useSelector<StateType, Array<number>>(state => state.map.center)\r\n    const zoom = useSelector<StateType, number>(state => state.map.zoom)\r\n    const search = useSelector<StateType, string>(state => state.map.search)\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const watch = true;\r\n    const {\r\n        latitude,\r\n        longitude,\r\n    } = usePosition(watch);\r\n\r\n    const mapState = {\r\n        width: 3538,\r\n        center: center,\r\n        zoom: zoom,\r\n        controls: []\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlacemarksTC(search))\r\n    }, [dispatch, search])\r\n    const handleMyLocation = () => {\r\n        const location = [latitude!, longitude!]\r\n        dispatch(myLocationAC(location, 14))\r\n        dispatch(centerPositionAC(location))\r\n    };\r\n\r\n    const onSubmitSearch = () => {\r\n        dispatch(getPlacemarksTC(searchValue))\r\n        setHideResults(true)\r\n    }\r\n\r\n    const onChangeSearchValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.app}>\r\n\r\n            <div className={s.search_container}>\r\n\r\n                {/*search component*/}\r\n                <div className={s.search}>\r\n                    <input type=\"text\"\r\n                           value={searchValue}\r\n                           onChange={onChangeSearchValue}\r\n                           className={s.search_box}\r\n                           placeholder=\"Search\"/>\r\n                    <input value=\"search\"\r\n                           type=\"submit\"\r\n                           onClick={onSubmitSearch}\r\n                           className={s.button}/>\r\n                    <input value=\"X\"\r\n                           type=\"submit\"\r\n                           className={s.button}/>\r\n\r\n\r\n                    {hideResults\r\n                        ? <button onClick={() => setHideResults(false)}>hide</button>\r\n                        : <button onClick={() => setHideResults(true)}>show</button>}\r\n                </div>\r\n\r\n                {hideResults && <div className={s.results}>\r\n                    <SearchBarInMap resultArray={feature} />\r\n                </div>}\r\n\r\n            </div>\r\n\r\n            <YMaps query={{lang: 'ru_RU', load: 'package.full'}}>\r\n                <Map width=\"100%\"\r\n                     height=\"100vh\"\r\n\r\n                     state={{zoom: zoom, center: center}}\r\n                     defaultState={mapState}\r\n                     modules={[\"geoObject.addon.editor\", \"geolocation\", \"geocode\"]}>\r\n                    {feature.map((c) => {\r\n                        return <Placemark\r\n                            geometry={[c.geometry.coordinates[1], c.geometry.coordinates[0]]}\r\n                            modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                            properties={{\r\n                                balloonContentHeader: c.properties.CompanyMetaData.name,\r\n                                balloonContentBody: c.properties.CompanyMetaData.address,\r\n                                balloonContentFooter: c.properties.CompanyMetaData.url,\r\n                            }}\r\n                        />\r\n                    })}\r\n                    <Placemark\r\n                        geometry={[53.917485, 27.604842]}\r\n                        options={{\r\n                            preset: \"islands#circleDotIcon\",\r\n                            iconColor: '#002222'\r\n                        }}\r\n                        properties={{\r\n                            balloonContentHeader: \"It-инкубатор\",\r\n                            balloonContentBody: \"Беларусь, Минск,ул. Сурганова, 2\",\r\n                            balloonContentFooter: \"http://it-kamasutra.com/\",\r\n                        }}\r\n                    />\r\n                    <Placemark\r\n                        geometry={myLocation}\r\n\r\n                        options={{\r\n                            preset: \"islands#circleDotIcon\",\r\n                            iconColor: '#ff0000'\r\n                        }}\r\n                    />\r\n                    <GeolocationControl onClick={handleMyLocation} options={{float: 'right'}}/>\r\n                </Map>\r\n            </YMaps>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapApp\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\"\r\nimport { MapReducer } from \"./MapReducer\";\r\n\r\nlet reducers = combineReducers({\r\n   map: MapReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleWare))\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport AppMap from \"./AppMap\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <AppMap/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__90Dp9\",\"search_container\":\"App_search_container__1tf1d\",\"search\":\"App_search__1acH8\",\"search_box\":\"App_search_box__2MGy5\",\"button\":\"App_button__1vEel\",\"results\":\"App_results__3KN1B\",\"result\":\"App_result__1RgEp\",\"map\":\"App_map__QQhb4\"};"],"sourceRoot":""}
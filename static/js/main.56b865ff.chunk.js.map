{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["mapState","width","height","center","zoom","App","useEffect","axios","get","then","res","console","log","data","style","display","justifyContent","alignItems","defaultState","modules","geometry","options","editorDrawingCursor","editorMaxPoints","fillColor","strokeColor","strokeWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAIMA,EAAW,CACbC,MAAO,IACPC,OAAQ,IACRC,OAAQ,CAAC,MAAO,OAChBC,KAAM,IAoCKC,EAhCH,WASR,OAPAC,qBAAW,WACPC,IAAMC,IAAN,+LAA6IC,MAAK,SAACC,GAC/IC,QAAQC,IAAIF,EAAIG,YAMpB,qBAAKC,MAAO,CAACZ,OAAQ,QAASa,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAArF,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKhB,MAAOD,EAASC,MAAOC,OAAQF,EAASE,OAAQgB,aAAclB,EAC9DmB,QAAS,CAAC,0BADf,SAEI,cAAC,IAAD,CACIC,SAAU,CAAC,UAAW,WACtBC,QAAS,CACLC,oBAAqB,YACrBC,gBAAiB,EACjBC,UAAW,UAEXC,YAAa,UAEbC,YAAa,YCrB1BC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.56b865ff.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport axios from 'axios'\nimport {Map, Placemark, YMaps} from \"react-yandex-maps\";\n\nconst mapState = {\n    width: 800,\n    height: 800,\n    center: [53.86, 27.53],\n    zoom: 10\n};\n\n\nconst App = () => {\n\n    useEffect( () => {\n        axios.get(`https://search-maps.yandex.ru/v1/?text=Компьютерные type=biz&lang=ru_RU&results=500&apikey=6f1a0a0c-b9b7-49ed-a969-1db3f019a8d1`).then((res) => {\n            console.log(res.data)\n        })\n    })\n\n\n    return (\n        <div style={{height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n            <YMaps>\n                <Map width={mapState.width} height={mapState.height} defaultState={mapState}\n                     modules={[\"geoObject.addon.editor\"]}>\n                    <Placemark\n                        geometry={[53.839362, 27.617904]}\n                        options={{\n                            editorDrawingCursor: \"crosshair\",\n                            editorMaxPoints: 1,\n                            fillColor: \"#00FF00\",\n                            // Цвет обводки.\n                            strokeColor: \"#0000FF\",\n                            // Ширина обводки.\n                            strokeWidth: 5\n                        }}\n                    />\n                </Map>\n            </YMaps>\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}